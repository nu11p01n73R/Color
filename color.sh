#!/usr/local/bin/bash


#
# Location of base16 shell files.
#
BASE16_PATH="$HOME/programs/shell/base16-shell"
#
# Location of config file.
#
CONFIG_FILE="./config"

#
# List all the available colors in the format
# color - background
# Color names correspond to their shell files in $BASE16_PATH
#
function list_all()
{
    scheme_files="${BASE16_PATH}/*.sh"

    echo
    echo "Available Color Schemes With Background"
    echo
    for file in $scheme_files
    do
        echo -e $file | sed "s#${BASE16_PATH}/base16-\([^.]*\).\(.*\).sh#\\1 - \\2#"
    done | column
}

#
# Prints an help on who to use the script.
#
function color_help()
{
    echo -e "color"
    echo "Change the base16 shell colors to any of the available colors with single command"
    echo "Basic Usage"
    echo -e "\t$ color scheme background"
    echo "List all colors"
    echo -e "\t$ color list"
    echo 
} 

#
# Creates new config file.
function new_config()
{
    echo '#!/usr/local/bin/bash 

# 
# Config file for color, saves the current 
# BACKGROUND and current color SCHEME. 
# This file will be auto generated by color.
# This file can also be manually created in the format,
# BACKGROUND="dark"
# SCHEME="tomorrow"
#

BACKGROUND="dark"
SCHEME="tomorrow"' > $CONFIG_FILE
 
}


#
# Entry script to color.
#
function color()
{

    if [[ ! -f "$CONFIG_FILE" ]]
    then
        echo "Cannot find config file. Creating new one."
        new_config
    fi

    source "$CONFIG_FILE"

    #
    # List the colors if the first argument is list.
    #
    if [[ $1 == "list" ]]
    then
        list_all
    elif [[ $1 == "help" ]]
    then
        color_help
    else
        # 
        # Prints the current scheme and background if nothing is specified.
        #
        echo "Current Scheme : $SCHEME"
        echo "Current Background : $BACKGROUND"
    fi 
}
